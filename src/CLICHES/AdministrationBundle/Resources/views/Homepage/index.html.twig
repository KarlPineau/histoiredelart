{# src/HDA/AdministrationBundle/Resources/views/Index/index.html.twig #}
 
{% extends "CLICHESAdministrationBundle::layout.html.twig" %}
 
{% block title %}
    Administration - {{ parent() }}
{% endblock %}

{% block brandtitle %}
    Administration
{% endblock %}

{% block breadcrumb %}
    {{ parent() }}
{% endblock %}

{% block h1 %}
    Administration
{% endblock %}

{% block h1_extend %}
    <div class="btn-group">
        <a href="{{ path('cliches_administration_statistics_index') }}" class="btn btn-default" title="Statistiques" data-toggle="tooltip" data-placement="left"><span class="glyphicon glyphicon-stats"></span></a>
        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Actions <span class="badge">{{ countModifications }}</span> <span class="caret"></span>
        </button>
        <ul class="dropdown-menu dropdown-menu-right">
            <li><a href="{{path('cliches_administration_playersuggest_index')}}">Modifications <span class="badge">{{ countModifications }}</span></a></li>
            <li><a href="{{ path('cliches_administration_playersession_index') }}">Historique des sessions</a></li>
            <li><a href="{{ path('cliches_administration_votes_statistics') }}"><i class="fa fa-comments-o" aria-hidden="true"></i> Votes</a></li>
            <li><a href="{{ path('cliches_administration_statistics_statisticsbyteaching') }}">Stats par Enseignement</a></li>
        </ul>
    </div>

{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-xs-12">
            {% for flashMessage in app.session.flashbag.get('notice') %}
                <div class="alert alert-success">
                    {{ flashMessage }}
                </div>
            {% endfor %}
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="well">
                <canvas id="sessionsInTime" width="400" height="200"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div>
                <h3>Dernières sessions :</h3>
            </div>
            <table class="table table-bordered table-striped">
                <tr>
                    <th>#</th>
                    <th>Matière</th>
                    <th>Période</th>
                    <th>Type</th>
                    <th>End</th>
                    <th>Nb</th>
                    <th>User</th>
                </tr>
                {% for session in sessions %}
                    <tr>
                        <td><a href="{{ path('cliches_administration_playersession_view', {'session_id': session.id}) }}">#{{ loop.index }}</a></td>
                        <td>{{ session.teaching.name }}</td>
                        <td>
                            {% if session.dateBegin is null and session.dateEnd is null %}Aucune donnée{% endif %}
                            {% if session.dateBegin is not empty %}{{ session.dateBegin|date('d-m-Y H:i:s') }}{% endif %}
                            {% if session.dateEnd is not empty %} - {{ session.dateEnd|date('H:i:s') }}
                                <span class="glyphicon glyphicon-arrow-right"></span> {{ cliches_player_playersession_service.getDiffTimeSession(session)|date("%H:%I:%S")}}{% endif %}
                        </td>
                        <td>
                            {% if session.proposalType == 'modeChoice' %}Choice
                            {% elseif session.proposalType == 'modeField' %}Field
                            {% elseif session.proposalType == 'modeTest' %}Test
                            {% else %}<span class="text-warning">Undef.</span>
                            {% endif %}
                        </td>
                        <td>{% if cliches_player_playerend_service.getBySession(session) != null %}Oui{% else %}Non{% endif %}</td>
                        <td>{{ cliches_player_playersession_service.getNumberCliches(session) }}</td>
                        <td>{{ session.ipPlayerUser }}{% if session.createUser is not empty %} <span class="glyphicon glyphicon-arrow-right"></span> <a href="{{ path('cas_administration_user_view', {'id': session.createUser.id}) }}">{{ session.createUser.email }}</a>{% endif %}</td>
                    </tr>
                {% endfor %}
            </table>
        </div>
    </div>
{% endblock %}

{% block javascript_sub %}
    {{ parent() }}
    <script src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.3/Chart.bundle.js"></script>
    <script>
        var sessionInTime = $("#sessionsInTime");
        var labels = [];
        function daysInMonth(month, year) {
            return new Date(year, month, 0).getDate();
        }
        var today = new Date();
        var yyyy = today.getFullYear();
        var month = today.getMonth()+1;
        var lastDay = today.getDate()-30;

        for(var i = 0 ; i <= 30 ; i++) {
            var current = lastDay+i;
            if(current > 0) {
                labels.push(current + '/' + month);
            } else {
                labels.push(daysInMonth(month-1, yyyy)-i);
            }
        }

        $.ajax({
            dataType: "json",
            url: Routing.generate('cliches_administration_statistics_getstatistiques_intime'),
            success: function(data){
                var sessionInTimeChart = new Chart(sessionInTime, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: "Sessions du jour",
                                fill: false,
                                lineTension: 0.1,
                                backgroundColor: "rgba(75,192,192,0.4)",
                                borderColor: "rgba(75,192,192,1)",
                                borderCapStyle: 'butt',
                                borderDash: [],
                                borderDashOffset: 0.0,
                                borderJoinStyle: 'miter',
                                pointBorderColor: "rgba(75,192,192,1)",
                                pointBackgroundColor: "#fff",
                                pointBorderWidth: 1,
                                pointHoverRadius: 5,
                                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                                pointHoverBorderColor: "rgba(220,220,220,1)",
                                pointHoverBorderWidth: 2,
                                pointRadius: 1,
                                pointHitRadius: 10,
                                data: data,
                            }
                        ]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero:true
                                }
                            }]
                        }
                    }
                });
            },
            error: function(error){
                console.log(dump(error));
            }
        });
    </script>
{% endblock %}